name: Vault CI

on:
  push:
    branches: [ main ]
    paths:
      - 'uranium-vault/**'
      - 'migrations/**'
      - '.github/workflows/vault.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'uranium-vault/**'
      - 'migrations/**'
      - '.github/workflows/vault.yml'

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: sqlite://uranium_vault.db

jobs:
  vault-check:
    name: Vault Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-v2-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install SQLx CLI
      run: |
        cargo install sqlx-cli --no-default-features --features sqlite
    
    - name: Setup database
      run: |
        sqlite3 uranium_vault.db < migrations/001_initial_schema.sql
        sqlx migrate run
    
    - name: Check formatting
      run: cargo fmt -p uranium-vault -- --check
    
    - name: Run clippy
      run: |
        cargo clippy -p uranium-vault -- -D warnings -A clippy::unused-unit -A clippy::uninlined-format-args
      continue-on-error: true  # Allow failures for now
    
    - name: Build vault
      run: cargo build -p uranium-vault
      continue-on-error: true  # Allow failures for now
    
    - name: Run vault tests
      run: cargo test -p uranium-vault
      continue-on-error: true  # Allow failures for now